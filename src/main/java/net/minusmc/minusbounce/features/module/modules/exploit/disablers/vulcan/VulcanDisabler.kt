package net.minusmc.minusbounce.features.module.modules.exploit.disablers.vulcan

import net.minecraft.network.play.client.C07PacketPlayerDigging
import net.minusmc.minusbounce.features.module.modules.exploit.disablers.DisablerMode
import net.minecraft.network.play.client.C0BPacketEntityAction
import net.minecraft.network.play.client.C17PacketCustomPayload
import net.minecraft.util.BlockPos
import net.minecraft.util.EnumFacing
import net.minusmc.minusbounce.event.MotionEvent
import net.minusmc.minusbounce.event.PacketEvent
import net.minusmc.minusbounce.utils.PacketUtils
import net.minusmc.minusbounce.value.BoolValue
class VulcanDisabler : DisablerMode("Vulcan") {

    private val sprint = BoolValue("Omni-Sprint",true)
    private val autoClicker = BoolValue("Auto Clicker", true)
    private val reach = BoolValue("Reach (4.5 Block)", true)
    private val movement = BoolValue("Strafe and Jump", true)
    private val fastUse = BoolValue("Fast Use",  true)
    private val miscellaneous = BoolValue("Miscellaneous (Auto-Block, BadPackets)", true)
    private val keepSprint = BoolValue("Keep Sprint (To disable KeepSprint spoof 1.9)", true)

    override fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if (miscellaneous.get() && packet is C17PacketCustomPayload) {
            event.cancelEvent()
        }
    }

    override fun onMotion(event: MotionEvent) {
        if (sprint.get()) {
            PacketUtils.sendPacketNoEvent(C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.START_SPRINTING))
            PacketUtils.sendPacketNoEvent(C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SPRINTING))
        }
        if (movement.get() && mc.thePlayer.ticksExisted % 5 === 0) {
            PacketUtils.sendPacketNoEvent(C07PacketPlayerDigging(C07PacketPlayerDigging.Action.STOP_DESTROY_BLOCK, BlockPos(mc.thePlayer), EnumFacing.UP))
        }
        if (autoClicker.get()) {
            PacketUtils.sendPacketNoEvent(C07PacketPlayerDigging(C07PacketPlayerDigging.Action.START_DESTROY_BLOCK, BlockPos(mc.thePlayer), EnumFacing.UP))
        }
        if (fastUse.get() && mc.thePlayer.ticksExisted % 7 === 0) {
            PacketUtils.sendPacketNoEvent(C07PacketPlayerDigging(C07PacketPlayerDigging.Action.DROP_ITEM, BlockPos.ORIGIN, EnumFacing.DOWN))
        }
    }
}
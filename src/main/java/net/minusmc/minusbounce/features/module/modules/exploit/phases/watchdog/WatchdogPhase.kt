package net.minusmc.minusbounce.features.module.modules.exploit.phases.watchdog


import net.minecraft.network.play.server.S02PacketChat
import net.minecraft.util.AxisAlignedBB
import net.minecraft.util.BlockPos
import net.minecraft.util.ChatComponentText
import net.minusmc.minusbounce.MinusBounce
import net.minusmc.minusbounce.event.BlockBBEvent
import net.minusmc.minusbounce.event.PacketEvent
import net.minusmc.minusbounce.features.module.modules.exploit.phases.PhaseMode
import net.minusmc.minusbounce.features.module.modules.player.Blink
import net.minusmc.minusbounce.ui.client.hud.element.elements.targets.impl.Minus

class WatchdogPhase : PhaseMode("Watchdog Auto Phase") {

    private var phaseTime = 0
    private var phasing = false
    override fun onTick() {
        if (phasing) phaseTime++
        else phaseTime = 0
    }

    override fun onWorld() {
        phaseTime = 0
        phasing = false
    }
    override fun onBlockBB(event: BlockBBEvent) {
        if (phasing && phaseTime <= 5)
            event.boundingBox = AxisAlignedBB(mc.thePlayer.posX, 0.0, mc.thePlayer.posZ, mc.thePlayer.posX, 0.0, mc.thePlayer.posZ)
    }

    override fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if (packet is S02PacketChat) {
            val text = packet.chatComponent.unformattedText
            val blockPos = BlockPos(mc.thePlayer.posX, mc.thePlayer.posY + 1.0, mc.thePlayer.posZ)
            if (text.contains(" 2 ") && text.contains("game")) {
                phasing = true
                if (phasing) MinusBounce.moduleManager[Blink::class.java]!!.state = true
            } else if (text.contains("FIGHT") && text.contains("Cages")) {
                phasing = false
                MinusBounce.moduleManager[Blink::class.java]!!.state = false
            } else if (text.contains("has joined")) {
                mc.thePlayer.addChatComponentMessage(ChatComponentText("Phase: 0"))
            }
        }

        // du
    }
}

package net.minusmc.minusbounce.features.module.modules.exploit.phases.other


import net.minusmc.minusbounce.event.BlockBBEvent
import net.minusmc.minusbounce.event.MoveEvent
import net.minusmc.minusbounce.features.module.modules.exploit.phases.PhaseMode
import net.minusmc.minusbounce.utils.MovementUtils
import net.minusmc.minusbounce.utils.timer.TickTimer
import kotlin.math.cos
import kotlin.math.sin


class MineplexPhase : PhaseMode("Mineplex") {

	private val mineplexTickTimer = TickTimer()
	private var mineplexClip = false

	override fun onMove(event: MoveEvent) {
		if (mc.thePlayer.isCollidedHorizontally)
            mineplexClip = true
        if (!mineplexClip)
            return

        mineplexTickTimer.update()

        event.x = 0.0
        event.z = 0.0

        if (mineplexTickTimer.hasTimePassed(3)) {
            mineplexTickTimer.reset()
            mineplexClip = false
        } else if (mineplexTickTimer.hasTimePassed(1)) {
            val offset = if (mineplexTickTimer.hasTimePassed(2)) 1.6 else 0.06
            val direction = MovementUtils.direction

            val x = sin(direction) * offset
            val z = cos(direction) * offset

            mc.thePlayer.setPosition(mc.thePlayer.posX - x, mc.thePlayer.posY, mc.thePlayer.posZ + z)
        }
	}
    override fun onBlockBB(event: BlockBBEvent) {} 
}

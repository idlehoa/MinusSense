package net.minusmc.minusbounce.features.module.modules.exploit.disablers.matrix


import io.netty.buffer.Unpooled
import net.minecraft.network.PacketBuffer
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.client.C17PacketCustomPayload
import net.minusmc.minusbounce.event.PacketEvent
import net.minusmc.minusbounce.features.module.modules.exploit.disablers.DisablerMode
import java.io.ByteArrayOutputStream
import java.io.DataOutputStream
import java.io.IOException

class MatrixGeyserDisabler : DisablerMode("MatrixGeyser") {

	override fun onPacket(event: PacketEvent) {
		val packet = event.packet
		if (packet is C03PacketPlayer && mc.thePlayer.ticksExisted % 15 == 0) {
			try {
				val b = ByteArrayOutputStream()
                val outData = DataOutputStream(b)
                outData.writeUTF(mc.thePlayer.gameProfile.name)
                val buf = PacketBuffer(Unpooled.buffer())
                buf.writeBytes(b.toByteArray())
                mc.netHandler.addToSendQueue(C17PacketCustomPayload("matrix:geyser", buf))

				debug("Sent Matrix Geyser spoof packet.")
			} catch (e: IOException) {
				debug("Error occurred.")
			}
		}
	}
}
